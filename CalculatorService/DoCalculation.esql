



CREATE COMPUTE MODULE DoCalculation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();

		DECLARE vNumber1 INT;
		DECLARE vNumber2 INT;
		DECLARE vResult INT;
		DECLARE vOperationType CHAR;

		SET vOperationType = FIELDNAME(InputRoot.XMLNSC.*[1]);
		
		IF (vOperationType = 'AdditionRequest') THEN
			SET vNumber1 = InputRoot.XMLNSC.AdditionRequest.Num1;
			SET vNumber2 = InputRoot.XMLNSC.AdditionRequest.Num2;
			SET vResult = vNumber1 + vNumber2;
			SET OutputRoot.XMLNSC.AdditionResponse.Result = vResult;

		ELSEIF (vOperationType = 'SubstractRequest') THEN
			SET vNumber1 = InputRoot.XMLNSC.SubstractRequest.Num1;
			SET vNumber2 = InputRoot.XMLNSC.SubstractRequest.Num2;
			SET vResult = vNumber1 - vNumber2;
			SET OutputRoot.XMLNSC.SubstractResponse.Result = vResult;

		ELSEIF (vOperationType = 'MultiplyRequest') THEN
			SET vNumber1 = InputRoot.XMLNSC.MultiplyRequest.Num1;
			SET vNumber2 = InputRoot.XMLNSC.MultiplyRequest.Num2;
			SET vResult = vNumber1 * vNumber2;
			SET OutputRoot.XMLNSC.MultiplyResponse.Result = vResult;
			
		ELSEIF (vOperationType = 'DivisionRequest') THEN
			SET vNumber1 = InputRoot.XMLNSC.DivisionRequest.Num1;
			SET vNumber2 = InputRoot.XMLNSC.DivisionRequest.Num2;
			SET vResult = vNumber1 / vNumber2;
			SET OutputRoot.XMLNSC.DivisionResponse.Result = vResult;
		
		ELSE
			SET OutputRoot.XMLNSC.Response.Result = 'Operation not supported';
		END IF;
		
		RETURN TRUE;
		
	END;

		CREATE PROCEDURE CopyMessageHeaders() BEGIN
			DECLARE I INTEGER 1;
			DECLARE J INTEGER;
			SET J = CARDINALITY(InputRoot.*[]);
			WHILE I < J DO
				SET OutputRoot.*[I] = InputRoot.*[I];
				SET I = I + 1;
			END WHILE;
		END;

		CREATE PROCEDURE CopyEntireMessage() BEGIN
			SET OutputRoot = InputRoot;
		END;
	END MODULE;